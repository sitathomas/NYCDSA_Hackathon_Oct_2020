users_trunc <- read_csv("./trunc_users.csv")
members_trunc <- members_trunc %>% mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%  mutate(.,date = as.Date(as.character(date),"%Y%m%d"))
print("Churn Dataframe")
print(paste0("total entires: ", length(churn_trunc$is_churn)))
print(paste0("number unique msno: ",length(unique(churn_trunc$msno))))
print(paste0("total churns: ", sum(churn_trunc$is_churn)))
print(paste0("percentage churns: ", sum(churn_trunc$is_churn)/length(churn_trunc$is_churn)*100, "%"))
print("Churn Dataframe")
print(paste0("total entires: ", length(churn_trunc$is_churn)))
print(paste0("number unique msno: ",length(unique(churn_trunc$msno))))
print(paste0("total churns: ", sum(churn_trunc$is_churn)))
print(paste0("percentage churns: ", sum(churn_trunc$is_churn)/length(churn_trunc$is_churn)*100, "%"))
members_trunc <- members_trunc %>% mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%  mutate(.,date = as.Date(as.character(date),"%Y%m%d"))
users_seg <- join(users_trunc,churn_trunc, by='msno', all = TRUE)
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
head(users_seg)
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
head(x, n=20)
head(users_seg, n=20L)
head(users_seg, n=20)
head(users_seg)
head(users_seg,20)
View(users_seg)
count(is.na(users_seg$date))
sum(is.na(users_seg$date))
#head(users_seg,20)
library(tidyverse)
library(ggplot2)
setwd('/Users/jameswelch/Dropbox (Personal)/NYDSA/Work/Hackathons/Customer Churn Hackathon Dataset')
churn_trunc <- read_csv("./trunc_churn.csv")
members_trunc <- read_csv("./trunc_members.csv")
transaction_trunc <- read_csv("./trunc_transaction.csv")
users_trunc <- read_csv("./trunc_users.csv")
library(tidyverse)
library(ggplot2)
setwd('/Users/jameswelch/Dropbox (Personal)/NYDSA/Work/Hackathons/NYCDSA_Hackathon_Oct_2020/James')
churn_trunc <- read_csv("./trunc_churn.csv")
members_trunc <- read_csv("./trunc_members.csv")
transaction_trunc <- read_csv("./trunc_transaction.csv")
users_trunc <- read_csv("./trunc_users.csv")
members_trunc <- members_trunc %>% mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
transaction_trunc <- transaction_trunc %>%  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%  mutate(.,date = as.Date(as.character(date),"%Y%m%d"))
users_trunc <- read_csv("./trunc_users.csv")
View(users_trunc)
# members_trunc <- members_trunc %>%
#   mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
# transaction_trunc <- transaction_trunc %>%
#  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
#transaction_trunc <- transaction_trunc %>%
#  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_truncs <- users_trunc %>%
mutate(.,date = as.Date(as.character(date),format = "%Y%m%d"))
View(users_truncs)
# members_trunc <- members_trunc %>%
#   mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
# transaction_trunc <- transaction_trunc %>%
#  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
#transaction_trunc <- transaction_trunc %>%
#  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%
mutate(.,date = as.Date(as.character(date),format = "%Y%m%d"))
View(users_trunc)
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
sum(is.na(users_seg$date))
#head(users_seg,20)
pwd
library(tidyverse)
library(ggplot2)
setwd('/Users/jameswelch/Dropbox (Personal)/NYDSA/Work/Hackathons/NYCDSA_Hackathon_Oct_2020/James')
churn_trunc <- read_csv("./trunc_churn.csv")
members_trunc <- read_csv("./trunc_members.csv")
transaction_trunc <- read_csv("./trunc_transaction.csv")
users_trunc <- read_csv("./trunc_users.csv")
# members_trunc <- members_trunc %>%
#   mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
# transaction_trunc <- transaction_trunc %>%
#  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
#transaction_trunc <- transaction_trunc %>%
#  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%
mutate(.,date = as.Date(as.character(date),format = "%Y%m%d"))
View(users_trunc)
sum(is.na(users_seg$date))
#head(users_seg,20)
users_seg %>%
ggplot(., aes(x = is_churn, y = total_secs)) +
geom_boxplot()
sum(is.na(users_seg$date))
#head(users_seg,20)
users_seg %>% mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
ggplot(., aes(x = is_churn, y = total_secs)) +
geom_boxplot()
sum(is.na(users_seg$date))
#head(users_seg,20)
users_seg %>%
filter(., total_secs != is.na(total_secs))
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
ggplot(., aes(x = is_churn, y = total_secs)) +
geom_boxplot()
sum(is.na(users_seg$date))
#head(users_seg,20)
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
ggplot(., aes(x = is_churn, y = total_secs)) +
geom_boxplot()
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
ggplot(., aes(x = is_churn, y = log(total_secs))) +
geom_boxplot()
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
t.test(x = filter(is_churn = 0), y = filter(is_churn = 1))
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
t.test(filter(is_churn = 0), y = filter(is_churn = 1))
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(filter(user_seg_ttest$is_churn = 0), y = filter(user_seg_ttest$is_churn = 1))
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(filter(user_seg_ttest$is_churn == 0), y = filter(user_seg_ttest$is_churn == 1))
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(filter(user_seg_ttest$is_churn == '0'), y = filter(user_seg_ttest$is_churn == '1'))
View(user_seg_ttest)
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(filter(user_seg_ttest$is_churn == F), y = filter(user_seg_ttest$is_churn == T))
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[is_churn == F], y = user_seg_ttest$total_secs[is_churn == T])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[is_churn == F], y = user_seg_ttest$total_secs[is_churn == T])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == F], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == T])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1], var.equal = F)
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1], var.equal = F)
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("Not Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0])
print("Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1], var.equal = F)
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("Not Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0])
print("Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("difference in means:")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0]) - mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
user_seg_ttest <- users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1], var.equal = F)
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("Not Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0])
print("Churn Mean")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("difference in means:")
mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0]) - mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
print("or in minutes: ")
(mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0]) - mean(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])) / 60
library(tidyverse)
library(ggplot2)
setwd('/Users/jameswelch/Dropbox (Personal)/NYDSA/Work/Hackathons/NYCDSA_Hackathon_Oct_2020/James')
churn_trunc <- read_csv("./trunc_churn.csv")
members_trunc <- read_csv("./trunc_members.csv")
transaction_trunc <- read_csv("./trunc_transaction.csv")
users_trunc <- read_csv("./trunc_users.csv")
# members_trunc <- members_trunc %>%
#   mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
# transaction_trunc <- transaction_trunc %>%
#  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
#transaction_trunc <- transaction_trunc %>%
#  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%
mutate(.,date = as.Date(as.character(date),format = "%Y%m%d"))
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
View(users_seg)
users_seg %>%
group_by(., msno) %>%
count(.$date)
users_seg %>%
group_by(., msno) %>%
count(., date)
users_seg %>%
group_by(., msno) %>%
count(., msno)
users_seg %>%
group_by(., msno) %>%
count(., msno) %>%
hist
users_seg %>%
group_by(., msno) %>%
count(., msno) %>%
hist()
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
View(msno_days)
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
hist(msno_days)
hist(msno_days$n)
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
colSums(is.na(users_seg))
msno_days %>%
ggplot(., aes(y = n)) +
geom_histogram()
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
colSums(is.na(users_seg))
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
colSums(is.na(users_seg))
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
user_seg[users_seg$date != NA]
user_seg[user_seg$date != NA]
users_seg[users_seg$date != NA]
users_seg[users_seg$date != NA,]
users_seg[is.na(users_seg$date)]
users_seg[is.na(users_seg$date),]
users_seg <- users_seg %>%  filter(., total_secs != is.na(total_secs))
users_seg <- users_seg %>%  filter(., total_secs != is.na(total_secs))
sum(is.na(users_seg$date))
users_trunc <- read_csv("./trunc_users.csv")
# members_trunc <- members_trunc %>%
#   mutate(.,registration_init_time = as.Date(as.character(registration_init_time),"%Y%m%d"))
# transaction_trunc <- transaction_trunc %>%
#  mutate(.,transaction_date = as.Date(as.character(transaction_date),"%Y%m%d"))
#transaction_trunc <- transaction_trunc %>%
#  mutate(.,membership_expire_date = as.Date(as.character(membership_expire_date), format = "%Y %m %d"))
users_trunc <- users_trunc %>%
mutate(.,date = as.Date(as.character(date),format = "%Y%m%d"))
users_seg <- merge(users_trunc,churn_trunc, by='msno', all = TRUE)
sum(is.na(users_seg$date))
colSums(is.na(users_seg))
users_seg[is.na(users_seg$date),]
sum(users_seg[is.na(users_seg$date),]$churn)
sum(users_seg[is.na(users_seg$date),]$is_churn)
sum(users_seg[is.na(users_seg$date),])
users_seg[is.na(users_seg$date),]
sum(users_seg[is.na(users_seg$date),]$is_churn) / length(users_seg[is.na(users_seg$date),]$is_churn)
(sum(users_seg[is.na(users_seg$date),]$is_churn) / length(users_seg[is.na(users_seg$date),]$is_churn)) * 100
print("Churn Dataframe")
print(paste0("total entires: ", length(churn_trunc$is_churn)))
print(paste0("number unique msno: ",length(unique(churn_trunc$msno))))
print(paste0("total churns: ", sum(churn_trunc$is_churn)))
print(paste0("percentage churns: ", sum(churn_trunc$is_churn)/length(churn_trunc$is_churn)*100, "%"))
users_seg <- users_seg %>%  filter(., date != is.na(date))
View(users_seg)
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = log(total_min))) +
geom_boxplot()
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = (total_min))) +
geom_boxplot()
user_seg_ttest <- users_seg %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all"))
t.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1], var.equal = F)
var.test(user_seg_ttest$total_secs[user_seg_ttest$is_churn == 0], y = user_seg_ttest$total_secs[user_seg_ttest$is_churn == 1])
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno)
colSums(is.na(users_seg))
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
View(msno_days)
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno, mean(is_churn))
View(msno_days)
View(msno_days)
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno, (is_churn))
View(msno_days)
#unique users
length(unique(users_seg$msno))
length(msno_days)
length(msno_days$msno)
#unique users
length(unique(users_seg$msno))
msno_days %>%
ggplot(., aes(x = is_churn, y = n)) +
geom_boxplot()
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno, is_churn)
msno_days %>%
ggplot(., aes(x = is_churn, y = n)) +
geom_boxplot()
msno_days %>%
ggplot(., aes(x = as.factor(is_churn), y = n)) +
geom_boxplot()
msno_days %>%
ggplot(., aes(x = as.factor(is_churn), y = n)) +
geom_boxplot() +
ylab("Number of days of observations per msno")
#unique users / quick QC
length(unique(users_seg$msno))
msno_days <- users_seg %>%
group_by(., c(msno,date)) %>%
count(., msno, is_churn)
msno_days <- users_seg %>%
group_by(., msno,date) %>%
count(., msno, is_churn)
#unique users / quick QC
#without date grouping = 15457
length(unique(users_seg$msno))
length(msno_days$msno)
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno, is_churn)
#unique users / quick QC
#without date grouping = 15457
# with date grouping = 277101, which is equivalent to our inital set
length(unique(users_seg$msno))
length(msno_days$msno)
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
msno_days %>%
ggplot(., aes(x = as.factor(is_churn), y = n)) +
geom_line()
msno_days %>%
ggplot(., aes(x = n )) +
geom_density()
msno_days %>%
ggplot(., aes(x = n, fill = is_churn)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn))) +
geom_density()
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = is_churn)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = is_churn)) +
geom_density(alpha = 0.4)
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_density(alpha = 0.4)
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_line(alpha = 0.4)
msno_days %>%
ggplot(., aes(x = n, y = count(msno),group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_line(alpha = 0.4)
msno_days %>%
ggplot(., aes(x = n, y = msno,group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_line(alpha = 0.4)
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_line(alpha = 0.4, position = "fill")
msno_days %>%
ggplot(., aes(x = n, group = as.factor(is_churn), fill = as.factor(is_churn))) +
geom_density(alpha = 0.4, position = "fill")
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = (total_min))) +
geom_violin()
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = log(total_min))) +
geom_violin()
unique(msno_days$msno[n==15])
unique(msno_days$msno[msno_days$n==15])
length(unique(msno_days$msno[msno_days$n==15]))
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
length(unique(msno_days$msno[msno_days$n==14]))
length(unique(msno_days$msno[msno_days$n==15]))
length(unique(msno_days$msno[msno_days$n==14]))
length(unique(msno_days$msno[msno_days$n==16]))
length(unique(msno_days$msno[msno_days$n==15]))
length(unique(msno_days$msno[msno_days$n==16]))
length(unique(msno_days$msno[msno_days$n==15]))
length(unique(msno_days$msno[msno_days$n==14]))
View(msno_days)
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n)) +
geom_density(bins = 1)
msno_days %>%
ggplot(., aes(x = n,bins = 1)) +
geom_density()
msno_days %>%
ggplot(., aes(x = n,bins = 1)) +
geom_histogram()
msno_days %>%
ggplot(., aes(x = n,)) +
geom_histogram(bins = 1)
msno_days %>%
ggplot(., aes(x = n,)) +
geom_histogram(bins = 1000)
msno_days %>%
ggplot(., aes(x = n,)) +
geom_histogram(bins = 31)
sum(is.na(users_seg$date))
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = log(total_min))) +
geom_boxplot()
users_seg %>%
filter(., total_secs != is.na(total_secs)) %>%
mutate(., is_churn = as.factor(is_churn), .keep = c("all")) %>%
mutate(., total_min = total_secs/60) %>%
ggplot(., aes(x = is_churn, y = (total_min))) +
geom_boxplot()
msno_days <- users_seg %>%
group_by(., msno) %>%
count(., msno, is_churn)
msno_days %>%
ggplot(., aes(x = n,)) +
geom_histogram(bins = 31)
msno_days %>%
ggplot(., aes(x = n)) +
geom_density()
msno_days %>%
ggplot(., aes(x = as.factor(is_churn), y = n)) +
geom_boxplot() +
ylab("Number of days of observations per msno")
